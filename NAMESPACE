exportPattern("^[^\\.]")
import(OpenMx)

# import(Matrix)
importFrom(Matrix, nearPD)

importFrom(ellipse, ellipse)
importFrom(MASS, mvrnorm)
importFrom(MASS, ginv)
importFrom(mvtnorm, rmvnorm)

S3method(plot, meta)
S3method(plot, character)
S3method(plot, wls)
S3method(plot, osmasem)

S3method(summary, wls)
S3method(summary, wls.cluster)
S3method(summary, tssem1FEM)
S3method(summary, tssem1FEM.cluster)
S3method(summary, tssem1REM)
S3method(summary, meta)
S3method(summary, meta3X)
S3method(summary, reml)
S3method(summary, CorPop)
S3method(summary, bootuniR2)
S3method(summary, osmasem)

S3method(anova, meta)
S3method(anova, meta3X)
S3method(anova, wls)
S3method(anova, reml)
S3method(anova, osmasem)

S3method(coef, tssem1FEM) 
S3method(coef, tssem1FEM.cluster) 
S3method(coef, wls)
S3method(coef, wls.cluster)
S3method(coef, tssem1REM)
S3method(coef, meta)
S3method(coef, meta3X)
S3method(coef, reml)
S3method(coef, MxRAMModel)
S3method(coef, osmasem)

S3method(vcov, wls)
S3method(vcov, tssem1FEM) 
S3method(vcov, tssem1FEM.cluster) 
S3method(vcov, wls.cluster)
S3method(vcov, tssem1REM)
S3method(vcov, meta)
S3method(vcov, meta3X)
S3method(vcov, reml)
S3method(vcov, MxRAMModel)
S3method(vcov, osmasem)

S3method(print, wls)
S3method(print, tssem1FEM)
S3method(print, tssem1FEM.cluster)
S3method(print, tssem1REM)
S3method(print, meta)
S3method(print, meta3X)
S3method(print, reml)
S3method(print, summary.wls)
S3method(print, summary.tssem1FEM)
S3method(print, summary.meta)
S3method(print, summary.meta3X)
S3method(print, summary.reml)
S3method(print, impliedR)
S3method(print, uniR1)
S3method(print, summary.CorPop)
S3method(print, summary.bootuniR2)

# required by R3.3
importFrom("graphics", "abline", "arrows", "layout", "par", "plot",
           "points", "polygon")
importFrom("stats", "as.formula", "coef", "cov2cor", "deriv",
           "na.omit", "pchisq", "pnorm", "printCoefmat", "qchisq",
           "qnorm", "reshape", "var", "vcov", "weighted.mean", "uniroot",
           "cov", "cor", "rWishart", "sd", "quantile")
importFrom("utils", "read.table")

importFrom(lavaan, sem)
importFrom(lavaan, lavaanify)
importFrom(lavaan, inspect)

